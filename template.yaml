AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  Graphql:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: Graphql
      AuthenticationType: API_KEY
      LogConfig:
        FieldLogLevel: ERROR
        CloudWatchLogsRoleArn: !GetAtt GraphqlLogsRole.Arn
  GraphqlSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt Graphql.ApiId
      DefinitionS3Location: Graphql/schema.graphql
  GraphqlLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-Graphql-logs
      Policies:
        - PolicyName: Log
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/appsync/apis/*
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/appsync/apis/*:log-stream:*
  GraphqlItemidResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Item
      DataSourceName: !GetAtt GraphqlToFunction3DataSource.Name
      RequestMappingTemplateS3Location: Graphql/Item-id-request.vm
      ResponseMappingTemplateS3Location: Graphql/Item-id-response.vm
      ApiId: !GetAtt Graphql.ApiId
      FieldName: id
    DependsOn: GraphqlSchema
  GraphqlItemoptionsResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: Item
      DataSourceName: !GetAtt GraphqlToFunctionDataSource.Name
      RequestMappingTemplateS3Location: Graphql/Item-options-request.vm
      ResponseMappingTemplateS3Location: Graphql/Item-options-response.vm
      ApiId: !GetAtt Graphql.ApiId
      FieldName: options
    DependsOn: GraphqlSchema
  GraphqlUserFormnextTokenResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      TypeName: UserForm
      DataSourceName: !GetAtt GraphqlToFunction2DataSource.Name
      RequestMappingTemplateS3Location: Graphql/UserForm-nextToken-request.vm
      ResponseMappingTemplateS3Location: Graphql/UserForm-nextToken-response.vm
      ApiId: !GetAtt Graphql.ApiId
      FieldName: nextToken
    DependsOn: GraphqlSchema
  Function:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Function
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Function
      CodeUri: src/Function
      Handler: index.handler
      Runtime: nodejs10.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
  Function2:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Function2
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Function2
      CodeUri: src/Function2
      Handler: function.handler
      Runtime: ruby2.5
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
  Function3:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-Function3
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: Function3
      CodeUri: src/Function3
      Handler: index.handler
      Runtime: nodejs10.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
  GraphqlToFunction2DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt GraphqlToFunction2AccessRole.Arn
      ApiId: !GetAtt Graphql.ApiId
      Name: Function2
      LambdaConfig:
        LambdaFunctionArn: !GetAtt Function2.Arn
  GraphqlToFunction2AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-Graphql-to-Function2
      Policies:
        - PolicyName: Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt Function2.Arn
  GraphqlToFunctionDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt GraphqlToFunctionAccessRole.Arn
      ApiId: !GetAtt Graphql.ApiId
      Name: Function
      LambdaConfig:
        LambdaFunctionArn: !GetAtt Function.Arn
  GraphqlToFunctionAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-Graphql-to-Function
      Policies:
        - PolicyName: Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt Function.Arn
  GraphqlToFunction3DataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: AWS_LAMBDA
      ServiceRoleArn: !GetAtt GraphqlToFunction3AccessRole.Arn
      ApiId: !GetAtt Graphql.ApiId
      Name: Function3
      LambdaConfig:
        LambdaFunctionArn: !GetAtt Function3.Arn
  GraphqlToFunction3AccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: appsync.amazonaws.com
          Action: sts:AssumeRole
      RoleName: !Sub ${AWS::StackName}-Graphql-to-Function3
      Policies:
        - PolicyName: Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt Function3.Arn
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)